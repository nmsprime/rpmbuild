# Linux-Server
apply Service "mysql" {
  import "generic-service"

  check_command = "mysql"

  vars.mysql_username = "icinga2user"
  vars.mysql_password = "<mysql_icinga2_psw>"

  assign where host.name == NodeName
}

apply Service "dns" {
  import "generic-service"

  check_command = "dns"

  vars.dns_lookup = "www.nmsprime.com"

  assign where host.name == NodeName
}

apply Service "time" {
  import "generic-service"

  check_command = "time"

  assign where host.name == NodeName
}

apply Service "sas2ircu" {
  import "generic-service"

  check_command = "sas2ircu"

  assign where host.name == NodeName
}

apply Service "tftp" {
  import "generic-service"

  check_command = "tftp"

  assign where host.name == NodeName
}

apply Service "updates" {
  import "generic-service"

  check_command = "updates"
  check_interval = 259m

  assign where host.name == NodeName
}

apply Service "outage" {
  import "generic-service"

  check_command = "netelementstatus"
  vars.output_type = "outage"
  vars.id_name = host.name
  check_interval = 5m
  retry_interval = 5m
  max_check_attempts = 2

  assign where host.vars.isBubble == "1"
  assign where host.vars.netelementtype_id == "1"
  assign where host.vars.netelementtype_id == "2"
  assign where host.vars.netelementtype_id == "3"
  assign where host.vars.netelementtype_id == "4"
  assign where host.vars.netelementtype_id == "5"
}

apply Service "proactive" {
  import "generic-service"

  check_command = "netelementstatus"
  vars.output_type = "proactive"
  vars.id_name = host.name
  check_interval = 5m
  retry_interval = 5m
  max_check_attempts = 2

  assign where host.vars.isBubble == "1"
}

apply Service "dhcpd-pools" {
  import "generic-service"

  check_command = "dhcpd-pools"

  assign where host.name == NodeName
}

apply Service "pppoe-pools" {
  import "generic-service"

  check_command = "pppoe-pools"

  assign where host.name == NodeName
}

apply Service "mem" {
  import "generic-service"

  check_command = "mem"

  vars.mem_free = "true"
  vars.mem_cache = "true"
  vars.mem_warning = "10"
  vars.mem_critical = "5"

  assign where host.name == NodeName
}

apply Service "ip_conntrack" {
  import "generic-service"

  check_command = "ip_conntrack"

  assign where host.name == NodeName
}

apply Service "systemd_service_" for (service in [ "named", "dhcpd", "xinetd", "firewalld", "nmsprimed", "httpd", "crond", "mariadb", "sshd", "rh-php73-php-fpm", "icinga2", "radiusd", "mongod", "genieacs-cwmp", "genieacs-fs", "genieacs-nbi", "kea-dhcp6" ]) {
  import "generic-service"

  check_command = "systemd_service"
  vars.systemd_service_service = service

  assign where host.name == NodeName
}

# supervisord
apply Service "supervisor_processes" {
  import "generic-service"

  check_command = "supervisor-processes"

  assign where host.name == NodeName
}

apply Service "nmsprime_update" {
  import "generic-service"

  check_command = "nmsprime_update"
  check_interval = 6h

  assign where host.name == NodeName
}

apply Service "latest_configfiles" {
  import "generic-service"

  check_command = "latest_configfiles"
  check_interval = 1h

  assign where host.name == NodeName
}

apply Service "laravel_debug_status" {
  import "generic-service"

  check_command = "laravel_debug_status"

  assign where host.name == NodeName
}

# CMTS
apply Service "us_snr" {
  import "generic-service"

  check_command = "us_snr"

  assign where host.vars.netelementtype_id == "3"
}

apply Service "us_usage" {
  import "generic-service"

  check_command = "us_usage"

  assign where host.vars.netelementtype_id == "3"
}

apply Service "us_number" {
  import "generic-service"

  check_command = "us_number"

  assign where host.vars.netelementtype_id == "3"
}

apply Service "ds_usage" {
  import "generic-service"

  check_command = "ds_usage"

  assign where host.vars.netelementtype_id == "3"
}

apply Service "snmp_env" {
  import "generic-service"

  check_command = "snmp_env"

  assign where host.vars.netelementtype_id == "3" && host.vars.vendor == "Cisco"
}

apply Service "dtcc" {
  import "generic-service"

  check_command = "dtcc"

  assign where host.vars.netelementtype_id == "3"
}

# Amplifier
apply Service "prop_vgp" {
  import "generic-service"

  check_command = "prop_vgp"

  assign where host.vars.netelementtype_id == "4"
}

# Node
apply Service "prop_ora" {
  import "generic-service"

  check_command = "prop_ora"

  assign where host.vars.netelementtype_id == "5"
}

# UPS
apply Service "apc_snmp_" for (command in [ "bat_status", "bat_capacity", "bat_temp", "bat_replace", "out_load" ]) {
  import "generic-service"

  check_command = "apc_snmp"
  vars.apc_snmp_command = command

  assign where host.vars.netelementtype_id == "7" && host.vars.vendor == "APC"
}
