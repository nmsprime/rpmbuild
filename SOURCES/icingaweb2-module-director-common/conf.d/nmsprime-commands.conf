object CheckCommand "time" {
  command = [ PluginDir + "/check_time" ]

  arguments = {
    "-H" = "$time_address$"
    "-u" = {description = "Use UDP instead of TCP" }
  }

  vars.time_address = "$address$"
}

object CheckCommand "sas2ircu" {
  command = [ PluginDir + "/check_sas2ircu" ]
}

object CheckCommand "tftp" {
  command = [ PluginDir + "/check_tftp.py" ]

  arguments = {
    "-H" = "$tftp_address$"
    "-f" = "$tftp_file$"
    "-t" = "$tftp_timeout$"
  }

  vars.tftp_address = "$address$"
  vars.tftp_file = "cm/cmdummy-validator.conf"
  vars.tftp_timeout = "10"
}

object CheckCommand "updates" {
  command = [ PluginDir + "/check_updates" ]

  arguments = {
    "-c" = "$update_critical$"
    "-t" = "$update_timeout$"
  }

  vars.update_critical = "100"
  vars.update_timeout = "60"
}

object CheckCommand "netelementstatus" {
  command = [ PluginDir + "/check_clusters.sh", "$output_type$", "$id_name$" ]
}

object CheckCommand "dhcpd-pools" {
  command = [ "/usr/bin/sudo", PluginDir + "/check_dhcpd-pools.sh" ]

  arguments = {
    "-c" = "$dhcpd_pools_configfile$"
    "-l" = "$dhcpd_pools_leasefile$"
    "-C" = "$dhcpd_pools_critical$"
    "-W" = "$dhcpd_pools_warning$"
    "-I" = "$dhcpd_pools_ignore$"
  }

  vars.dhcpd_pools_configfile = "/etc/dhcp-nmsprime/dhcpd.conf"
  vars.dhcpd_pools_leasefile = "/var/lib/dhcpd/dhcpd.leases"
  vars.dhcpd_pools_warning = "80"
  vars.dhcpd_pools_critical = "90"
  vars.dhcpd_pools_ignore = "15"
}

object CheckCommand "pppoe-pools" {
  command = [ PluginDir + "/check_pppoe-pools.sh" ]
}

object CheckCommand "systemd_service" {
  command = [ PluginDir + "/check_systemd_service.sh" ]

  command += [ "$systemd_service_service$" ]
}

object CheckCommand "us_snr" {
  command = [ PluginDir + "/check_us_snr.sh" ]

  arguments = {
    "-H" = "$us_snr_address$"
    "-C" = "$ro_community$"
    "-c" = "$us_snr_critical$"
    "-w" = "$us_snr_warning$"
  }

  vars.us_snr_address = "$address$"
  vars.ro_community = "public"
}

object CheckCommand "us_usage" {
  command = [ PluginDir + "/check_us_usage.sh" ]

  arguments = {
    "-H" = "$us_usage_address$"
    "-C" = "$ro_community$"
    "-c" = "$us_usage_critical$"
    "-w" = "$us_usage_warning$"
  }

  vars.us_usage_address = "$address$"
  vars.ro_community = "public"
}

object CheckCommand "us_number" {
  command = [ PluginDir + "/check_us_number.sh" ]

  arguments = {
    "-H" = "$us_number_address$"
    "-C" = "$ro_community$"
    "-c" = "$us_number_critical$"
    "-w" = "$us_number_warning$"
  }

  vars.us_number_address = "$address$"
  vars.ro_community = "public"
}

object CheckCommand "ds_usage" {
  command = [ PluginDir + "/check_ds_usage.sh" ]

  arguments = {
    "-H" = "$ds_usage_address$"
    "-C" = "$ro_community$"
    "-c" = "$ds_usage_critical$"
    "-w" = "$ds_usage_warning$"
  }

  vars.ds_usage_address = "$address$"
  vars.ro_community = "public"
}

object CheckCommand "snmp_env" {
  command = [ PluginDir + "/check_snmp_env.pl" ]

  arguments += {
    "-T" = {
      value = "$snmp_env_type$"
      description = "Environment Type [cisco|nokia|bc|iron|foundry|linux]"
    }
    "-F" = {
      value = "$snmp_env_fan$"
      description = "Minimum fan rpm value (only needed for 'iron' & 'linux')"
    }
    "-c" = {
      value = "$snmp_env_celsius$"
      description = "Maximum temp in degrees celsius (only needed for 'iron' & 'linux')"
    }
    "-f" = {
      set_if = "$snmp_perf$"
      description = "Perfparse compatible output"
    }
    "-H" = "$snmp_env_address$"
    "-C" = "$ro_community$"
  }

  vars.snmp_env_address = "$address$"
  vars.snmp_env_type = "cisco"
  vars.snmp_perf = true
  vars.ro_community = "public"
}

object CheckCommand "dtcc" {
  command = [ PluginDir + "/check_dtcc.sh" ]

  arguments = {
    "-H" = "$dtcc_address$"
    "-C" = "$ro_community$"
  }

  vars.dtcc_address = "$address$"
  vars.ro_community = "public"
}

object CheckCommand "ip_conntrack" {
  command = [ PluginDir + "/check_ip_conntrack.pl" ]

  arguments = {
    "-c" = "$ip_conntrack_critical$"
    "-w" = "$ip_conntrack_warning$"
  }

  vars.ip_conntrack_critical = "90"
  vars.ip_conntrack_warning = "80"
}

object CheckCommand "apc_snmp" {
  command = [ PluginDir + "/check_apc.pl" ]

  arguments = {
    "-H" = "$apc_snmp_address$"
    "-C" = "$ro_community$"
    "-l" = "$apc_snmp_command$"
    "-p" = "$apc_snmp_port$"
  }

  vars.apc_snmp_address = "$address$"
  vars.apc_snmp_command = "status"
  vars.ro_community = "public"
  vars.apc_snmp_port = "$port$"
}

object CheckCommand "prop_ora" {
  command = [ PluginDir + "/check_prop_ora.sh" ]

  arguments = {
    "-H" = "$prop_ora_address$"
    "-C" = "$ro_community$"
  }

  vars.prop_ora_address = "$address$"
  vars.ro_community = "public"
}

object CheckCommand "prop_vgp" {
  command = [ PluginDir + "/check_prop_vgp.sh" ]

  arguments = {
    "-H" = "$prop_vgp_address$"
    "-C" = "$ro_community$"
  }

  vars.prop_vgp_address = "$address$"
  vars.ro_community = "public"
}

object CheckCommand "nmsprime_update" {
  command = [ PluginDir + "/check_nmsprime_update.sh" ]
}

object CheckCommand "latest_configfiles" {
  command = [ PluginDir + "/check_latest_configfiles.sh" ]
}
